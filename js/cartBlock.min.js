'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

(function ($) {

    $(document).ready(function () {

        // Remove item from cart
        $(document.body).on('click', '.cartBlock__navbtn--remove', function (e) {
            e.preventDefault();
            var $product_key = $(this).attr('data-key');
            $.ajax({
                url: ajax_url,
                type: "POST",
                dataType: "json",
                data: {
                    'action': 'remove_item_from_cart',
                    'product_key': $product_key
                },
                success: function success() {
                    $(document.body).trigger('cart_update');
                },
                error: function error() {
                    console.log('Nie udało się zaaktualizować ilości elementów w koszyku.');
                }
            });
        });

        $(document.body).on('cart_update', get_cart_contents);

        function get_cart_contents() {
            var $output;
            $.ajax({
                url: ajax_url,
                type: "POST",
                dataType: "json",
                data: {
                    'action': 'get_cart_contents'
                },
                success: function success(response) {
                    var cartparams = {
                        'container_count': $('.cartBlock__cartCount'),
                        'container_total': $('.cartBlock__total'),
                        'container_productsCount': $('.cartBlock__badge small'),
                        'container_products': $('.cartBlock__products'),
                        'cart_count': response['cart_count'],
                        'cart_total': response['cart_total']
                    };
                    var products = [];
                    for (var product in response['products']) {
                        products.push(new cartBlockItem(response['products'][product]));
                    }
                    var cartBlockObject = new cartBlock(cartparams, products);

                    cartBlockObject.update_cart();
                },
                error: function error() {
                    console.log('Nie udało się zaaktualizować ilości elementów w koszyku.');
                }
            });
        }
    }); // document ready

    var cartBlock = function () {
        function cartBlock(params, products) {
            _classCallCheck(this, cartBlock);

            this.container_count = params['container_count'];
            this.container_total = params['container_total'];
            this.container_productsCount = params['container_productsCount'];
            this.container_products = params['container_products'];
            this.products = products;
            this.cart_count = params['cart_count'];
            this.cart_total = params['cart_total'];
            self = this;
        }

        _createClass(cartBlock, [{
            key: 'update_cart',
            value: function update_cart() {
                this.update_cart_total();
                this.update_cart_count();
                this.update_cart_products();
            }
        }, {
            key: 'update_cart_total',
            value: function update_cart_total() {
                this.container_total.html(self.cart_total);
            }
        }, {
            key: 'update_cart_count',
            value: function update_cart_count() {
                this.container_count.html(self.cart_count);
                this.container_count.addClass('bounce');
                setTimeout(function () {
                    self.container_count.removeClass('bounce');
                }, 1000);
            }
        }, {
            key: 'update_cart_products',
            value: function update_cart_products() {
                var productsHTML = '';

                if (this.products.length > 0) {
                    for (var product in this.products) {
                        productsHTML += this.products[product].generate_cart_item();
                    }
                } else {
                    productsHTML += this.generate_empty_cart_item();
                }

                this.container_products.html(productsHTML);
            }
        }, {
            key: 'generate_empty_cart_item',
            value: function generate_empty_cart_item() {
                var $output = '<div class="cartBlock__product">\n                    <div class="cartBlock__empty">\n                        Brak produkt\xF3w w koszyku.\n                    </div>\n                </div>';

                return $output;
            }
        }]);

        return cartBlock;
    }();

    var cartBlockItem = function () {
        function cartBlockItem(params) {
            _classCallCheck(this, cartBlockItem);

            this.qty = params['qty'];
            this.sku = params['sku'];
            this.cart_key = params['cart_key'];
            this.name = params['name'];
            this.thumb_url = params['thumb_url'];
            this.product_url = params['product_url'];
            this.price = params['price'];
        }

        _createClass(cartBlockItem, [{
            key: 'generate_cart_item',
            value: function generate_cart_item() {
                var $output = '<div class="cartBlock__product" data-key="' + this.cart_key + '">\n                    <div class="cartBlock__product_Image">\n                        <img src="' + this.thumb_url + '" alt="' + this.name + '">\n                    </div>\n                    <div class="cartBlock__product_Details">\n                        <div class="cartBlock__product_Title">\n                            <a class="linkReverse" href="' + this.product_url + '">' + this.name + '</a>\n                        </div>\n                        <div class="cartBlock__product_SKU">\n                            SKU ' + this.sku + '\n                        </div>\n                        <div class="cartBlock__navbtns">\n                            <div class="cartBlock__navbtn cartBlock__navbtn--qty">\n                                ' + this.qty + '\n                            </div>\n                            <div class="cartBlock__navbtn cartBlock__navbtn--remove" data-key="' + this.cart_key + '">\n                                X\n                            </div>\n                        </div>\n                    </div>\n                    <div class="clearfix"></div>\n                    <div class="cartBlock__product_Price italic">\n                        ' + this.price + '\n                    </div>\n                </div>';

                return $output;
            }
        }]);

        return cartBlockItem;
    }();
})(jQuery);
//# sourceMappingURL=cartBlock.min.js.map
